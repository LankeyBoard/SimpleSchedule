{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Classes\\\\SimpleSchedule\\\\employee\\\\src\\\\pages\\\\CreateShift.js\";\nimport React from 'react';\nimport { Calendar, Views } from 'react-big-calendar';\nimport events from '../events';\nconst propTypes = {};\n\nclass Selectable extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelect = ({\n      start,\n      end\n    }) => {\n      const title = window.prompt('New Event name');\n      if (title) this.setState({\n        events: [...this.state.events, {\n          start,\n          end,\n          title\n        }]\n      });\n    };\n\n    this.state = {\n      events\n    };\n  }\n\n  render() {\n    const {\n      localizer\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Calendar, {\n      selectable: true,\n      localizer: localizer,\n      events: this.state.events,\n      defaultView: Views.WEEK,\n      scrollToTime: new Date(1970, 1, 1, 6),\n      defaultDate: new Date(2015, 3, 12),\n      onSelectEvent: event => alert(event.title),\n      onSelectSlot: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nSelectable.propTypes = propTypes;\nexport default Selectable;","map":{"version":3,"sources":["D:/Documents/Classes/SimpleSchedule/employee/src/pages/CreateShift.js"],"names":["React","Calendar","Views","events","propTypes","Selectable","Component","constructor","args","handleSelect","start","end","title","window","prompt","setState","state","render","localizer","props","WEEK","Date","event","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,oBAAhC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,MAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;;AADmB,SAMrBC,YANqB,GAMN,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAoB;AACjC,YAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,gBAAd,CAAd;AACA,UAAIF,KAAJ,EACE,KAAKG,QAAL,CAAc;AACZZ,QAAAA,MAAM,EAAE,CACN,GAAG,KAAKa,KAAL,CAAWb,MADR,EAEN;AACEO,UAAAA,KADF;AAEEC,UAAAA,GAFF;AAGEC,UAAAA;AAHF,SAFM;AADI,OAAd;AAUH,KAnBoB;;AAGnB,SAAKI,KAAL,GAAa;AAAEb,MAAAA;AAAF,KAAb;AACD;;AAiBDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKC,KAA3B;AACA,wBACE,uDACE,oBAAC,QAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,SAAS,EAAED,SAFb;AAGE,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWb,MAHrB;AAIE,MAAA,WAAW,EAAED,KAAK,CAACkB,IAJrB;AAKE,MAAA,YAAY,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CALhB;AAME,MAAA,WAAW,EAAE,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CANf;AAOE,MAAA,aAAa,EAAEC,KAAK,IAAIC,KAAK,CAACD,KAAK,CAACV,KAAP,CAP/B;AAQE,MAAA,YAAY,EAAE,KAAKH,YARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAcD;;AAtCsC;;AAyCzCJ,UAAU,CAACD,SAAX,GAAuBA,SAAvB;AAEA,eAAeC,UAAf","sourcesContent":["import React from 'react'\r\nimport { Calendar, Views } from 'react-big-calendar'\r\nimport events from '../events'\r\n\r\n\r\nconst propTypes = {}\r\n\r\nclass Selectable extends React.Component {\r\n  constructor(...args) {\r\n    super(...args)\r\n\r\n    this.state = { events }\r\n  }\r\n\r\n  handleSelect = ({ start, end }) => {\r\n    const title = window.prompt('New Event name')\r\n    if (title)\r\n      this.setState({\r\n        events: [\r\n          ...this.state.events,\r\n          {\r\n            start,\r\n            end,\r\n            title,\r\n          },\r\n        ],\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { localizer } = this.props\r\n    return (\r\n      <>\r\n        <Calendar\r\n          selectable\r\n          localizer={localizer}\r\n          events={this.state.events}\r\n          defaultView={Views.WEEK}\r\n          scrollToTime={new Date(1970, 1, 1, 6)}\r\n          defaultDate={new Date(2015, 3, 12)}\r\n          onSelectEvent={event => alert(event.title)}\r\n          onSelectSlot={this.handleSelect}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nSelectable.propTypes = propTypes\r\n\r\nexport default Selectable"]},"metadata":{},"sourceType":"module"}