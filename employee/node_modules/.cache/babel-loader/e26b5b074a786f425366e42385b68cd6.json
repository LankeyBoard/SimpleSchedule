{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Classes\\\\SimpleSchedule\\\\employee\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react'; // import Axios from 'axios'\n\nimport { BrowserRouter as Router, Route, Switch // ,Redirect\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport TimeOff from './pages/TimeOff';\nimport Info from './pages/EmployeeInfo';\nimport NavBar from './pages/NavBar';\nimport CreateShift from './pages/CreateShift';\nimport NotFoundPage from './pages/NotFoundPage';\nimport Login from './pages/LoginPage';\nimport ProtectedRoute from \"./pages/ProtectedRoute\";\nimport TokenService from './services/tokenService';\nimport { Settings } from './services/Settings';\nexport default (() => {\n  const [jwt, setJwt] = useState('');\n  const [isLoggedIn, changeLoginState] = useState(Settings.isLoggedInDefault);\n  const [token, setToken] = useState(\"\");\n  const [userData, setUserData] = useState({});\n\n  const toggle = loggingAction => {\n    if (loggingAction === 'logout') {\n      changeLoginState(!isLoggedIn);\n      setToken('');\n    } // ....THIS IS REGISTRATION LOGIC....\n\n    /*\r\n    if(isLoggedIn===true) {\r\n      alert('remove token from memmory...')\r\n      changeLoginState(true)\r\n    }\r\n    */\n\n    /*\r\n    const newIsLoggedInState = !isLoggedIn\r\n    changeLoginState(newIsLoggedInState)\r\n    if(newIsLoggedInState) {\r\n      // this means we are now logged in...\r\n      Axios.post('./api/users', {\r\n        \"name\": \"unclefifi\",\r\n        \"email\": \"unclefifi@gmail.com\",\r\n        \"password\": \"papai\"\r\n      }).then((axiosApiResponse) => {\r\n        const token = axiosApiResponse.data.token\r\n        setToken(token)\r\n        alert(token)\r\n      }).catch((axiosError) => {\r\n        if(axiosError\r\n          && axiosError.response\r\n          && axiosError.response.data\r\n          && Array.isArray(axiosError.response.data.errors)\r\n          && axiosError.response.data.errors.length > 0) {\r\n            const { errors } = axiosError.response.data\r\n            errors.forEach(i => {\r\n              alert(i.msg)\r\n            })\r\n          }\r\n      })\r\n    }*/\n\n  };\n\n  const receiveNewJwt = jwt => {\n    console.log(jwt);\n    setJwt(jwt);\n    setUserData(TokenService.retrieveTokenData(jwt));\n    changeLoginState(true);\n  };\n\n  const _roleDefined = !!(userData && userData.role);\n\n  const _isLoggedIn = isLoggedIn && _roleDefined;\n\n  let role = '';\n  let isManager = false;\n\n  if (_roleDefined) {\n    role = userData.role;\n    isManager = role === 'manager';\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    isLoggedIn: _isLoggedIn,\n    userData: userData,\n    toggled: toggle,\n    isManager: isManager,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-body\",\n    className: \"flexbox-wrapper vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    render: props => /*#__PURE__*/React.createElement(ProtectedRoute, {\n      adminOnly: false,\n      userData: userData,\n      isLoggedIn: _isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(HomePage, {\n      userData: userData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 109\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    exact: true,\n    render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n      newJwtNotify: receiveNewJwt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 30\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/info\",\n    render: props => /*#__PURE__*/React.createElement(ProtectedRoute, {\n      adminOnly: false,\n      userData: userData,\n      isLoggedIn: _isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 109\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/timeOff\",\n    render: props => /*#__PURE__*/React.createElement(ProtectedRoute, {\n      adminOnly: true,\n      userData: userData,\n      isLoggedIn: _isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(TimeOff, {\n      userData: userData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 108\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/CreateShifts\",\n    render: props => /*#__PURE__*/React.createElement(ProtectedRoute, {\n      adminOnly: true,\n      userData: userData,\n      isLoggedIn: _isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(CreateShift, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 108\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: NotFoundPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }))));\n});","map":{"version":3,"sources":["D:/Documents/Classes/SimpleSchedule/employee/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","HomePage","TimeOff","Info","NavBar","CreateShift","NotFoundPage","Login","ProtectedRoute","TokenService","Settings","jwt","setJwt","isLoggedIn","changeLoginState","isLoggedInDefault","token","setToken","userData","setUserData","toggle","loggingAction","receiveNewJwt","console","log","retrieveTokenData","_roleDefined","role","_isLoggedIn","isManager","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n// import Axios from 'axios'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n  // ,Redirect\r\n} from 'react-router-dom'\r\nimport HomePage from './pages/HomePage'\r\nimport TimeOff from './pages/TimeOff'\r\nimport Info from './pages/EmployeeInfo'\r\nimport NavBar from './pages/NavBar'\r\nimport CreateShift from './pages/CreateShift'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\nimport Login from './pages/LoginPage'\r\nimport ProtectedRoute from \"./pages/ProtectedRoute\"\r\nimport TokenService from './services/tokenService'\r\nimport { Settings } from './services/Settings'\r\n\r\n\r\nexport default () => {\r\n\r\n  const [jwt, setJwt] = useState('')\r\n  const [isLoggedIn, changeLoginState] = useState(Settings.isLoggedInDefault)\r\n  const [token, setToken] = useState(\"\")\r\n  const [userData, setUserData] = useState({})\r\n\r\n\r\n  const toggle = (loggingAction) => {\r\n\r\n    if(loggingAction === 'logout') {\r\n      changeLoginState(!isLoggedIn)\r\n      setToken('')\r\n    }\r\n\r\n    // ....THIS IS REGISTRATION LOGIC....\r\n    /*\r\n    if(isLoggedIn===true) {\r\n      alert('remove token from memmory...')\r\n      changeLoginState(true)\r\n    }\r\n    */\r\n\r\n    /*\r\n    const newIsLoggedInState = !isLoggedIn\r\n    changeLoginState(newIsLoggedInState)\r\n    if(newIsLoggedInState) {\r\n      // this means we are now logged in...\r\n      Axios.post('./api/users', {\r\n        \"name\": \"unclefifi\",\r\n        \"email\": \"unclefifi@gmail.com\",\r\n        \"password\": \"papai\"\r\n      }).then((axiosApiResponse) => {\r\n        const token = axiosApiResponse.data.token\r\n        setToken(token)\r\n        alert(token)\r\n      }).catch((axiosError) => {\r\n        if(axiosError\r\n          && axiosError.response\r\n          && axiosError.response.data\r\n          && Array.isArray(axiosError.response.data.errors)\r\n          && axiosError.response.data.errors.length > 0) {\r\n            const { errors } = axiosError.response.data\r\n            errors.forEach(i => {\r\n              alert(i.msg)\r\n            })\r\n          }\r\n      })\r\n    }*/\r\n  }\r\n\r\n  const receiveNewJwt = jwt => {\r\n    console.log(jwt)\r\n    setJwt(jwt)\r\n    setUserData(TokenService.retrieveTokenData(jwt))\r\n    changeLoginState(true)\r\n  }\r\n\r\n  const _roleDefined = !!(userData && userData.role)\r\n  const _isLoggedIn = isLoggedIn && _roleDefined\r\n\r\n  let role = ''\r\n  let isManager = false\r\n  if(_roleDefined) {\r\n      role = userData.role\r\n      isManager = role === 'manager'\r\n  }\r\n\r\n  return <Router>\r\n\r\n    <NavBar \r\n      isLoggedIn={_isLoggedIn} \r\n      userData={userData} \r\n      toggled={toggle}\r\n      isManager={isManager}\r\n    />\r\n\r\n    <div id=\"page-body\" className=\"flexbox-wrapper vertical\">\r\n      <Switch>\r\n\r\n        <Route \r\n          path=\"/\" \r\n          exact\r\n          render={(props) => <ProtectedRoute adminOnly={false} userData={userData} isLoggedIn={_isLoggedIn}><HomePage userData={userData}/></ProtectedRoute>}\r\n        />\r\n\r\n        <Route \r\n          path=\"/login\" \r\n          exact\r\n          render={(props) => <Login {...props} newJwtNotify={receiveNewJwt}/>}\r\n        />\r\n\r\n        <Route \r\n          exact\r\n          path=\"/info\" \r\n          render={(props) => <ProtectedRoute adminOnly={false} userData={userData} isLoggedIn={_isLoggedIn}><Info/></ProtectedRoute>}\r\n        />\r\n\r\n        <Route \r\n          exact\r\n          path=\"/timeOff\" \r\n          render={(props) => <ProtectedRoute adminOnly={true} userData={userData} isLoggedIn={_isLoggedIn}><TimeOff userData={userData}/></ProtectedRoute>}\r\n        />\r\n        <Route\r\n          path=\"/CreateShifts\"\r\n          render={(props) => <ProtectedRoute adminOnly={true} userData={userData} isLoggedIn={_isLoggedIn}><CreateShift /></ProtectedRoute>}\r\n        />\r\n        <Route component={NotFoundPage} />\r\n\r\n      </Switch>\r\n    </div>\r\n</Router>\r\n\r\n}"]},"metadata":{},"sourceType":"module"}