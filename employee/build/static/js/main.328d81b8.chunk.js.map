{"version":3,"sources":["images/Ostrich-big.png","images/Astronaut-big.png","images/BoatLeak-big.png","images/Ghost-big.png","images/IceCreamSpill-big.png","images/LostTourist-big.png","images/Slogo.png","components/Employee-Info.js","components/Schedule-Event.js","shifts.js","components/Schedule-Details.js","pages/HomePage.js","pages/TimeOff.js","pages/EmployeeInfo.js","pages/NavBar.js","pages/CreateShift.js","pages/NotFoundPage.js","pages/LoginPage.js","pages/ProtectedRoute.js","services/tokenService.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","avatarUrl","id","className","width","src","Shift","title","startTime","endTime","startDate","endDate","desc","shifts","map","shift","i","key","localizer","momentLocalizer","moment","useState","events","setEvents","userData","avatar","useEffect","Axios","get","then","AxiosResponse","allEvents","data","start","toDate","end","catch","axiosError","console","log","defaultDate","Date","defaultView","onSelectEvent","eventDetails","javascriptEvent","Info","isLoggedIn","toggled","logText","_LoggedInNavItems","to","onClick","React","Component","imageCollection","logo1","logo2","logo3","logo4","logo5","logo6","imageCollectionSize","length","NotFoundPage","randomInt","Math","floor","random","randomImage","alt","Login","newJwtNotify","userid","setUserId","password","setPassword","errors","setErrors","isRedirectingHome","setToHome","changeField","fieldName","target","value","logInApiRequest","post","apiResponse","jwt","apiError","response","x","msg","logo","for","type","placeholder","onChange","e","children","tokenService","token","JSON","parse","atob","split","user","error","setJwt","changeLoginState","setToken","setUserData","receiveNewJwt","TokenService","retrieveTokenData","NavBar","loggingAction","path","exact","render","ProtectedRoute","HomePage","TimeOff","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.328d81b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ostrich-big.e721d581.png\";","module.exports = __webpack_public_path__ + \"static/media/Astronaut-big.a67ff34f.png\";","module.exports = __webpack_public_path__ + \"static/media/BoatLeak-big.97da6c4e.png\";","module.exports = __webpack_public_path__ + \"static/media/Ghost-big.2447f57e.png\";","module.exports = __webpack_public_path__ + \"static/media/IceCreamSpill-big.05129db0.png\";","module.exports = __webpack_public_path__ + \"static/media/LostTourist-big.7164c20b.png\";","module.exports = __webpack_public_path__ + \"static/media/Slogo.e4704dc8.png\";","import React from 'react';\r\nexport default (props) => {\r\n    \r\n    const { avatarUrl } = props\r\n\r\n    return <div id=\"left_sidebar\" className=\"flexbox-wrapper vertical\">\r\n        <h2 className=\"text-alignedCenter\">Emplyee Info</h2>\r\n        <div className=\"flexbox-centered flexbox-wrapper\">\r\n            <img width=\"200\" src={avatarUrl} />\r\n        </div>\r\n        <p>Name</p>\r\n        <p>More info ... total hours, areas allowed to work, etc.</p>\r\n    </div>\r\n}","import React from 'react';\r\n\r\nconst Shift = ({title, startTime, endTime, startDate, endDate, desc}) => {\r\n\treturn (\r\n\t\t<section>\r\n            <h3>{title}</h3>\r\n            <p className=\"shiftTime\">{startTime}, {startDate} - {endTime}, {endDate} </p>\r\n            <p>Notes: {desc}</p>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Shift;","const shifts = [\r\n    {\r\n        title: \"Shift 1\",\r\n        startTime: \"1:00pm\",\r\n        endTime: \"8:30pm\",\r\n        startDate: \"4/12/2020\",\r\n        endDate: \"4/12/2020\",\r\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pellentesque massa placerat duis ultricies lacus.\"\r\n    },\r\n    {\r\n        title: \"Shift 2\",\r\n        startTime: \"5:00pm\",\r\n        endTime: \"12:30am\",\r\n        startDate: \"4/14/2020\",\r\n        endDate: \"4/15/2020\",\r\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pellentesque massa placerat duis ultricies lacus.\"\r\n    },\r\n\r\n];\r\n\r\nexport default shifts;","import React from 'react'\r\nimport Shift from './Schedule-Event'\r\nimport shifts from './../shifts'// should NOT be hard coded...\r\nexport default () => <div id='right_sidebar'>\r\n        <h2>Schedule Details</h2>\r\n        <p>Total Hours: 20hrs</p>\r\n        <p>Shift Details</p>\r\n        {shifts.map(\r\n            (shift, i) => \r\n                <Shift \r\n                    key={i}\r\n                    title={shift.title} \r\n                    startTime={shift.startTime}\r\n                    endTime={shift.endTime}\r\n                    startDate={shift.startDate}\r\n                    endDate={shift.endDate}\r\n                    desc={shift.desc}\r\n                    />\r\n        )}\r\n    </div>","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport EmployeeInfo from './../components/Employee-Info'\r\nimport ScheduleDetail from './../components/Schedule-Details'\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\"\r\nimport moment from \"moment\"\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport default (props) => {\r\n    const [events, setEvents] = useState([])\r\n    const { userData } = props\r\n\r\n    let avatarUrl = ''\r\n    if(userData.avatar) {\r\n        avatarUrl = userData.avatar\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        Axios.get('/getEvents').then((AxiosResponse) => {\r\n            const allEvents = (AxiosResponse.data.events || []).map(i => {\r\n                return  {\r\n                    start:  moment(i.start).toDate(),\r\n                    end:    moment(i.end).toDate(),\r\n                    title:  i.title\r\n                }\r\n            })\r\n            setEvents(allEvents)\r\n        }).catch((axiosError) => {\r\n            console.log(axiosError)\r\n        })\r\n    }, [])\r\n\r\n    const onSelectEvent = (eventDetails, javascriptEvent) => {\r\n        console.log(eventDetails)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"flexbox-wrapper flexbox-item\">\r\n            <EmployeeInfo avatarUrl={avatarUrl} />\r\n            <div id=\"focus\" className=\"flexbox-item\">\r\n                <div className=\"Calendar\">\r\n                    <Calendar\r\n                        localizer={localizer}\r\n                        defaultDate={new Date()}\r\n                        defaultView=\"month\"\r\n                        events={events}\r\n                        onSelectEvent={onSelectEvent}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <ScheduleDetail />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nexport default () => <>\r\n        <h1>Time Off Request Form</h1>\r\n        <p>A time off request form will display below</p>\r\n    </>","import React from 'react';\r\n\r\nconst Info = () => (\r\n    <>\r\n    <h1>Employee Info</h1>\r\n    <p>This will be the epmloyees basic info, pay rate, etc </p>\r\n    </>\r\n)\r\nexport default Info;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default (props) => {\r\n    const { isLoggedIn, toggled } = props\r\n    const logText = isLoggedIn ? \"Log Out\" : \"Log In\"\r\n\r\n    const _LoggedInNavItems = [\r\n        <li key=\"home\">\r\n            <Link className=\"flexbox-wrapper flexbox-item flexbox-centered\" to=\"/\">View Schedule</Link>\r\n        </li>,\r\n        <li key=\"information\">\r\n            <Link className=\"flexbox-wrapper flexbox-item flexbox-centered\" to=\"/info\">View Info</Link>\r\n        </li>,\r\n        <li key=\"timeOff\">\r\n            <Link className=\"flexbox-wrapper flexbox-item flexbox-centered\" to=\"/TimeOff\">Request Time Off</Link>\r\n        </li>\r\n    ]\r\n\r\n\r\n    return <nav id=\"navigation_container\">\r\n                <ul className=\"flexbox-wrapper nav\">\r\n                    {isLoggedIn ? _LoggedInNavItems : null}\r\n                    {/* SPACER */}\r\n                    <div className=\"flexbox-item\"></div>\r\n\r\n                    {/* should fire function instead... */}\r\n                    <li onClick={() => toggled(isLoggedIn ? 'logout' : 'login')} className=\"logout\">\r\n                        <Link className=\"flexbox-wrapper flexbox-item flexbox-centered\" to=\"/login\">{logText}</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n}","import React from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport ScheduleDetail from'../components/Schedule-Details';\r\nimport moment from \"moment\";\r\n\r\nconst events = [];\r\nconst localizer = momentLocalizer(moment);  \r\n\r\nclass CreateShift extends React.Component {\r\n    constructor(...args) {\r\n      super(...args)\r\n  \r\n      this.state = { events }\r\n    }\r\n  \r\n    handleSelect = ({ start, end }) => {\r\n      const title = window.prompt('New Event name')\r\n      if (title)\r\n        this.setState({\r\n          events: [\r\n            ...this.state.events,\r\n            {\r\n              start,\r\n              end,\r\n              title,\r\n            },\r\n          ],\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const localizer = momentLocalizer(moment);\r\n        return (\r\n            <div className=\"Calendar\" id=\"create_shifts\">\r\n                <Calendar\r\n                selectable\r\n                localizer={localizer}\r\n                defaultDate={new Date()}\r\n                defaultView=\"month\"\r\n                events={this.state.events}\r\n                onSelectEvent={event=> alert(event.title)}\r\n                onSelectSlot={this.handleSelect}\r\n                defaultView=\"week\"\r\n                />\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateShift","import React from 'react';\r\nimport logo1 from \"./../images/Ostrich-big.png\"\r\nimport logo2 from \"./../images/Astronaut-big.png\"\r\nimport logo3 from \"./../images/BoatLeak-big.png\"\r\nimport logo4 from \"./../images/Ghost-big.png\"\r\nimport logo5 from \"./../images/IceCreamSpill-big.png\"\r\nimport logo6 from \"./../images/LostTourist-big.png\"\r\n\r\nconst imageCollection = [\r\n    logo1,\r\n    logo2,\r\n    logo3,\r\n    logo4,\r\n    logo5,\r\n    logo6\r\n]\r\n\r\nconst imageCollectionSize = imageCollection.length\r\n\r\nconst NotFoundPage = () => {\r\n    const randomInt = Math.floor(Math.random()*imageCollectionSize)\r\n    const randomImage = imageCollection[randomInt]\r\n    return <div id=\"pageNotFound\" className=\"flexbox-wrapper vertical flexbox-centered\">\r\n    <div>\r\n        <div id=\"pageNotFound-img-wrapper\">\r\n            <img src={randomImage} alt=\"404 Image\"/>\r\n        </div>\r\n        <h1>404: Page Not Found</h1>\r\n    </div>\r\n</div>\r\n}\r\n\r\nexport default NotFoundPage;","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport logo from './../images/Slogo.png'\r\nimport Axios from 'axios'\r\n\r\nconst Login = (props) => {\r\n    \r\n    const { newJwtNotify } = props\r\n    const [userid, setUserId] = useState('unclefifi')\r\n    const [password, setPassword] = useState('password')\r\n    const [errors, setErrors] = useState([])\r\n    const [isRedirectingHome, setToHome] = useState(false)\r\n\r\n\r\n    const changeField = (fieldName, eventDetails) => {\r\n        if(eventDetails && eventDetails.target && typeof eventDetails.target.value === \"string\") {\r\n            const value = eventDetails.target.value\r\n            if(fieldName==='userId') {\r\n                setUserId(value)\r\n            } else if(fieldName==='password') {\r\n                setPassword(value)\r\n            }\r\n        }\r\n    }\r\n\r\n    const logInApiRequest = () => {\r\n        Axios.post('/api/users/authenticate', { userid, password }).then((apiResponse)=> {\r\n            \r\n            const jwt = apiResponse.data\r\n            newJwtNotify(jwt)\r\n            setToHome(true)\r\n\r\n        }).catch((apiError) => {\r\n\r\n            // errors is an array of { msg: string }\r\n            if(apiError && apiError.response && apiError.response.data && apiError.response.data.errors) {\r\n                setErrors(apiError.response.data.errors.map(x => x.msg))\r\n            }\r\n\r\n        })\r\n    }\r\n    \r\n    const _errorsBuild = () => errors.map((e,i) => <div key={e}>{i+1}.) {e}</div>)\r\n\r\n    const buildForm = () => <div className=\"flexbox-wrapper flexbox-item vertical\">\r\n                        \r\n                        <div className=\"flexbox-item\">\r\n                            <img id=\"loginLogo\" src={logo} alt=\"Logo\" />\r\n                        </div>\r\n\r\n                        <div className=\"flexbox-centered flexbox-wrapper\">\r\n                            <div className=\"flexbox-wrapper login vertical\">\r\n                                <h3>Login</h3>\r\n                                <span className=\"flexbox-wrapper\">\r\n                                    <label className=\"flexbox-item\" for=\"userid\">Employee ID</label>\r\n                                    <input \r\n                                        className=\"flexbox-item\"\r\n                                        type=\"text\" \r\n                                        id=\"userid\" \r\n                                        placeholder=\"loginID\"\r\n                                        value={userid}\r\n                                        onChange={(e) => changeField('userId',e)}\r\n                                    />\r\n                                </span>\r\n                                <span className=\"flexbox-wrapper\">\r\n                                    <label className=\"flexbox-item\" for=\"pw\">Password</label>\r\n                                    <input \r\n                                        className=\"flexbox-item\"\r\n                                        type=\"text\" \r\n                                        id=\"pw\" \r\n                                        placeholder=\"password\"\r\n                                        value={password}\r\n                                        onChange={(e) => changeField('password',e)}\r\n                                    />\r\n                                </span>\r\n                                <button onClick={logInApiRequest} id=\"login\">Login</button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"flexbox-centered flexbox-item flexbox-wrapper vertical\">\r\n                            {_errorsBuild()}\r\n                        </div>\r\n                    </div>\r\n\r\n    return isRedirectingHome ? <Redirect to=\"/\"/> : buildForm()\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n// stole from the following exmaple\r\n// https://reacttraining.com/react-router/web/api/Redirect\r\nexport default (props) => {\r\n\r\n    const { isLoggedIn, children } = props\r\n\r\n    return isLoggedIn ? <>{children}</> : <Redirect to=\"/login\"/>\r\n}","export default class tokenService\r\n{\r\n    static retrieveTokenData(token)\r\n    {\r\n        try {\r\n            const _userData = JSON.parse(atob(token.split(\".\")[1])).user\r\n            return _userData\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n}","import React, { useState } from 'react'\r\n// import Axios from 'axios'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n  // ,Redirect\r\n} from 'react-router-dom'\r\nimport HomePage from './pages/HomePage'\r\nimport TimeOff from './pages/TimeOff'\r\nimport Info from './pages/EmployeeInfo'\r\nimport NavBar from './pages/NavBar'\r\nimport CreateShift from './pages/CreateShift'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\nimport Login from './pages/LoginPage'\r\nimport ProtectedRoute from \"./pages/ProtectedRoute\"\r\nimport TokenService from './services/tokenService'\r\n\r\n\r\nexport default () => {\r\n\r\n  const [jwt, setJwt] = useState('')\r\n  const [isLoggedIn, changeLoginState] = useState(false)\r\n  const [token, setToken] = useState(\"\")\r\n  const [userData, setUserData] = useState({})\r\n\r\n  const toggle = (loggingAction) => {\r\n\r\n    if(loggingAction === 'logout') {\r\n      changeLoginState(!isLoggedIn)\r\n      setToken('')\r\n    }\r\n\r\n    // ....THIS IS REGISTRATION LOGIC....\r\n    /*\r\n    if(isLoggedIn===true) {\r\n      alert('remove token from memmory...')\r\n      changeLoginState(true)\r\n    }\r\n    */\r\n\r\n    /*\r\n    const newIsLoggedInState = !isLoggedIn\r\n    changeLoginState(newIsLoggedInState)\r\n    if(newIsLoggedInState) {\r\n      // this means we are now logged in...\r\n      Axios.post('./api/users', {\r\n        \"name\": \"unclefifi\",\r\n        \"email\": \"unclefifi@gmail.com\",\r\n        \"password\": \"papai\"\r\n      }).then((axiosApiResponse) => {\r\n        const token = axiosApiResponse.data.token\r\n        setToken(token)\r\n        alert(token)\r\n      }).catch((axiosError) => {\r\n        if(axiosError\r\n          && axiosError.response\r\n          && axiosError.response.data\r\n          && Array.isArray(axiosError.response.data.errors)\r\n          && axiosError.response.data.errors.length > 0) {\r\n            const { errors } = axiosError.response.data\r\n            errors.forEach(i => {\r\n              alert(i.msg)\r\n            })\r\n          }\r\n      })\r\n    }*/\r\n  }\r\n\r\n  const receiveNewJwt = jwt => {\r\n    console.log(jwt)\r\n    setJwt(jwt)\r\n    setUserData(TokenService.retrieveTokenData(jwt))\r\n    changeLoginState(true)\r\n  }\r\n\r\n\r\n\r\n  return <Router>\r\n\r\n    <NavBar isLoggedIn={isLoggedIn} toggled={toggle}/>\r\n\r\n    <div id=\"page-body\" className=\"flexbox-wrapper vertical\">\r\n      <Switch>\r\n\r\n        <Route \r\n          path=\"/\" \r\n          exact\r\n          render={(props) => <ProtectedRoute {...props} isLoggedIn={isLoggedIn}><HomePage userData={userData}/></ProtectedRoute>}\r\n        />\r\n\r\n        <Route \r\n          path=\"/login\" \r\n          exact\r\n          render={(props) => <Login {...props} newJwtNotify={receiveNewJwt}/>}\r\n        />\r\n\r\n        <Route \r\n          exact\r\n          path=\"/info\" \r\n          render={(props) => <ProtectedRoute {...props} isLoggedIn={isLoggedIn}><Info/></ProtectedRoute>}\r\n        />\r\n\r\n        <Route \r\n          exact\r\n          path=\"/timeOff\" \r\n          render={(props) => <ProtectedRoute {...props} isLoggedIn={isLoggedIn}><TimeOff/></ProtectedRoute>}\r\n        />\r\n\r\n        <Route component={NotFoundPage} />\r\n\r\n      </Switch>\r\n    </div>\r\n</Router>\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// adding in CSS\r\nimport './css/index.css';\r\nimport './css/App.css';\r\nimport './css/flex.css';\r\nimport \"./css/404.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}